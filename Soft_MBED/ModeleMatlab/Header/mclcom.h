/*
 * @(#)mclcom.h    generated by: makeheader 5.1.5  Mon Jun 29 16:13:52 2009
 *
 *		built from:	../../src/include/copyright.h
 *				../../src/include/pragma_interface.h
 *				index.cpp
 *				mclmain.cpp
 *				mxconvert.cpp
 *				mxconvert_sparse.cpp
 *				printout.cpp
 */

#if defined(_MSC_VER)
# pragma once
#endif
#if defined(__GNUC__) && (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ > 3))
# pragma once
#endif

#ifndef mclcom_h
#define mclcom_h


/*
 * Copyright 1984-2003 The MathWorks, Inc.
 * All Rights Reserved.
 */



/* Copyright 2003-2006 The MathWorks, Inc. */

/* Only define EXTERN_C if it hasn't been defined already. This allows
 * individual modules to have more control over managing their exports.
 */
#ifndef EXTERN_C

#ifdef __cplusplus
  #define EXTERN_C extern "C"
#else
  #define EXTERN_C extern
#endif

#endif


#include <windows.h>
#include <string.h>
#include <malloc.h>
#include <stdio.h>
#include <stddef.h>
#include <objbase.h>
#include <assert.h>
#include <float.h>

/* CLSID's of supported object types */
extern const GUID IID_Range;

// Structure used to pass supporting info for objects into CMCLModule Init method.

typedef struct _MCLOBJECT_MAP_ENTRY
{
	// Pointer to CLSID value

	const CLSID* pclsid;
	// Pointer to function responsible for registering the class

	HRESULT (__stdcall* pfnRegisterClass)(const GUID*, unsigned short, unsigned short, 
                                          const char*, const char*, const char*, const char*);
	// Pointer to function responsible for unregistering the class

	HRESULT (__stdcall* pfnUnregisterClass)(const char*, const char*);
	// Pointer to function responsible for returning an instance of the object's class factory

	HRESULT (__stdcall* pfnGetClassObject)(REFCLSID, REFIID, void**);
	// Class's friendly name

	const char* lpszFriendlyName;
	// Class's version independent ProgID

	const char* lpszVerIndProgID;
	// Class's ProgID

	const char* lpszProgID;
} _MCLOBJECT_MAP_ENTRY, *MCLOBJECT_MAP_ENTRY;

/* Max number of tabs for output */
#define MAX_TAB		128
/* Temp buffer length for formatting output */
#define MAX_PRINTBUFF_LEN   1024

/* Struct for passing data conversion flags */
typedef struct _MCLCONVERSION_FLAGS
{
    mwArrayFormat InputFmt;     /* Input array format */
    long nInputInd;             /* Input array format indirection flag */
    mwArrayFormat OutputFmt;    /* Output array format */
    long nOutputInd;            /* Output array format indirection flag */
    bool bAutoResize;           /* Auto-resize-output flag for Excel ranges */
    bool bTranspose;            /* Transpose-output flag */
    long nTransposeInd;         /* Transpose-output indirection flag */
    mxClassID nCoerceNumeric;   /* Coerce-all-numeric-input-to-type flag */
    mwDateFormat InputDateFmt;  /* Input date format */
    mxComplexity Complexity;    /* Input-is-complex flag */
    bool bReal;                 /* Copy-to-real/imag-buffer flag */
    bool bOutputAsDate;         /* Coerce-output-to-date flag */
    long nDateBias;             /* Date bias to use in date conversion */
} _MCLCONVERSION_FLAGS, *MCLCONVERSION_FLAGS;

/* Date bias from Variant to Matlab */
#define VARIANT_DATE_BIAS   693960


#endif /* mclcom_h */
